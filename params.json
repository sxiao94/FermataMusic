{
  "name": "Fermata Sheet Music",
  "tagline": "",
  "body": "### Fermata Sheet Music - Our Vision\r\n\r\n![](http://i.imgur.com/sjvnnBz.png)\r\n\r\nWe created our app to address the problem of bringing age old sheet music to the digital age. We envisioned a sleek easy to use iPad application that brought together all the tools musicians use on a daily basis. Our solution is Fermata Sheet Music.  \r\n\r\n### Our Process\r\n\r\nFor our project we worked mainly with Musical Instrument Digital Interface (MIDI) files. MIDI files are the technical standard in the industry concerning music as they carry information that specifies pitch, notation, velocity, as well as a plethora of other related data. Our first and arguably most important task to complete was the parsing of the MIDI files themselves. With the given MIDI data, how could we transform it into the sheet music that  we all know and use today? \r\n\r\nOur project is mostly coded in Swift, the newest and fastest growing programming language of iOS and OS X. There are certain features however that could only be accomplished in Javascript. This includes the process of parsing the MIDI file and drawing the sheet music with libraries such as Vexflow. We decided to take the music that was created in HTML and then embed into Swift. \r\n\r\nOur Parser Parses MIDI data like this... \r\n![](http://i.imgur.com/bAFGFNC.png)\r\n\r\n... into music like this.\r\n\r\n![](http://i.imgur.com/LGnEvR0.png)\r\n\r\nOur MIDI files themselves are saved onto a mySQL database and pulled when needed. The pulling of the MIDI files are performed with PHP calls. \r\n\r\n![](http://i.imgur.com/244gpuu.png)\r\nPHP Calls used to pull MIDI data from the database\r\n\r\n\r\nOur database organizes our application and keeps detailed tables that track how elements of the application interact with one another. It is used to store and manipulate data concerning users, the music they store, the playlists they create, and many more. \r\n\r\n\r\n\r\n![](http://i.imgur.com/LH9n4lH.png)\r\n\r\nA table in our database that stores songs. \r\n\r\n\r\n\r\n![](http://i.imgur.com/yTK1JnN.png)\r\nRelational Schema detailing how the different aspects of our application interact with one another. \r\n\r\n### Fermata At Work\r\n\r\n![](http://postimg.org/image/60lfjybhd/)\r\n\r\n### Features\r\nIt wasn't enough for us to just display music on an iPad. We wanted to provide additional features and tools that musicians of all levels would use on a daily basis.\r\n\r\n### Facebook Login\r\nWe have included Facebook login to the app to provide us with a login platform. This also allows a more personalized experience for the user. \r\n\r\n### Metronome\r\nThe metronome is an essential tool in any musician's repertoire. Following along with the beat while you play has never been easier with Fermata. \r\n\r\n![](http://i.imgur.com/CN9HVkk.png)\r\n\r\n### Tuner\r\nThe majority of instruments need to be tuned regularly to ensure proper pitch. The tuner that we currently have implemented is the most traditional type. It plays a note at the exact frequency and pitch and the user then adjusts their instrument to match the given pitch. We hope to build on the tuner by also allowing the option for dynamic tuning. This feature would basically \"hear\" what the user plays and then tells the user how to adjust accordingly. \r\n\r\n![](http://i.imgur.com/rbSozRF.png)\r\n\r\n\r\n\r\n### Follow - Along\r\nOne of the main problems of sheet music that we wanted to address was to get rid of noisey page turns. This can be accomplished with Follow - Along, our feature that would basically scroll down the music autonomously while the musician is playing. This feature has since been completed. \r\n\r\n\r\n### Since our last post\r\nEach section of our blog has been updated to account for the new features and changes since our last blog post. We have continued to update our app and mainly focused on polish. Our main goals since the last blog has been integration and overall polish and design. I have discussed integration in the previous section concerning our main music page. We have also beautified our app quite a bit by choosing a proper color scheme and adding in other small changes that overall create a much more aesthetically pleasing application. \r\n\r\n### Authors and Contributors\r\nEric Chanthorabout : e882c516@ku.edu\r\n\r\nEugene Raygorodetskiy: e369r446@ku.edu\r\n\r\nKyle Roush: k731r960@ku.edu\r\n\r\nSamuel Benson: sambenson@ku.edu\r\n\r\nSikai Xiao: s195x439@ku.edu\r\n\r\nYoung Liu: youngliu@ku.edu\r\n\r\n### Looking Forward\r\n\r\nWe are excited to continue improving our application and polishing it into the app that we envisioned at the beginning of the year. We have our vital features completed at this time. The app looks and works great, and we are very proud of our project. Since this project is open source, some of us may decide to work on it in the future and hopefully publish it into the app store. A big thanks to Omar Bari and Andy Gill for their help and advice along the way! We couldn't have done it without their guidance.  ",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}